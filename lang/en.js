// Default language (es). It'll use eXe's translations if available
$i18n['eXe'] = {
    // === INDEX.HTML - MAIN HEADER & FOOTER ===
    'EdiCuaTeX - LaTeX Equation Editor': _('EdiCuaTeX - LaTeX Equation Editor'),
    'Create mathematical formulas visually, copy them or download them as images.': _('Create mathematical formulas visually, copy them or download them as images.'),
    'Educational Applications Laboratory': _('Educational Applications Laboratory'),
    'Application created by Juan José de Haro': _('Application created by Juan José de Haro'),
    // === INDEX.HTML - MAIN HEADER & FOOTERSEARCH & TOOLBAR ===
    'Search by description or code (e.g.: fraction, \\int)...': _('Search by description or code (e.g.: fraction, \\int)...'),
    'Clear search': _('Clear search'),
    'Customize menu': _('Customize menu'),
    'Fullscreen': _('Fullscreen'),
    'Recent': _('Recent'),
    // === INDEX.HTML - MAIN HEADER & FOOTERLATEX CODE PANEL ===
    'LaTeX Code': _('LaTeX Code'),
    'Ask AI for formula': _('Ask AI for formula'),
    'AI Assistant': _('AI Assistant'),
    'Write your code here... \\frac{a}{b}': _('Write your code here... \\frac{a}{b}'),
    'Formula delimiters:': _('Formula delimiters:'),
    'No delimiter': _('No delimiter'),
    'Insert': _('Insert'),
    'Copy': _('Copy'),
    'Delete': _('Delete'),
    'Code copied!': _('Code copied!'),
    // === INDEX.HTML - MAIN HEADER & FOOTERPREVIEW PANEL ===
    'Preview': _('Preview'),
    'View image': _('View image'),
    // === INDEX.HTML - MAIN HEADER & FOOTERSETTINGS MODAL ===
    'Manage menus': _('Manage menus'),
    'You can edit your own menus with the': _('You can edit your own menus with the'),
    'Menu Editor': _('Menu Editor'),
    'Available menus': _('Available menus'),
    'Loading...': _('Loading...'),
    'Reload list': _('Reload list'),
    'Custom load': _('Custom load'),
    'Load menu from external URL': _('Load menu from external URL'),
    'Load': _('Load'),
    'Load menu from local file': _('Load menu from local file'),
    'Clear cache and reload': _('Clear cache and reload'),
    'Close': _('Close'),
    // === INDEX.HTML - MAIN HEADER & FOOTERAI ASSISTANT MODAL ===
    'AI Formula Assistant': _('AI Formula Assistant'),
    'Describe the formula or mathematical expression you need. The assistant will generate an instruction (prompt) for you to use in an AI model like ChatGPT.': _('Describe the formula or mathematical expression you need. The assistant will generate an instruction (prompt) for you to use in an AI model like ChatGPT.'),
    '1. Describe your formula:': _('1. Describe your formula:'),
    'E.g.: Quadratic equation with a=1, b=14 and c=-4': _('E.g.: Quadratic equation with a=1, b=14 and c=-4'),
    '2. Generate AI instruction': _('2. Generate AI instruction'),
    '3. Generated instruction:': _('3. Generated instruction:'),
    'The AI instruction will appear here...': _('The AI instruction will appear here...'),
    'Open in ChatGPT': _('Open in ChatGPT'),
    'Copy for another AI': _('Copy for another AI'),
    // === INDEX.HTML - MAIN HEADER & FOOTERALERT MODAL ===
    'Understood': _('Understood'),
    // === INDEX.HTML - MAIN HEADER & FOOTERDYNAMIC JS MESSAGES ===
    'Could not get code from parent dialog:': _('Could not get code from parent dialog:'),
    'Error loading menu': _('Error loading menu'),
    'Could not load': _('Could not load'),
    'No menus found.': _('No menus found.'),
    'Syntax error': _('Syntax error'),
    'No formula to capture.': _('No formula to capture.'),
    'Right-click on the image to save or copy it.': _('Right-click on the image to save or copy it.'),
    'Menu loaded successfully.': _('Menu loaded successfully.'),
    'Please enter a URL.': _('Please enter a URL.'),
    'Error parsing local JSON:': _('Error parsing local JSON:'),
    'The file is not a valid JSON': _('The file is not a valid JSON'),
    'Please describe the formula you need.': _('Please describe the formula you need.'),
    'Instruction generated. You can now use the buttons.': _('Instruction generated. You can now use the buttons.'),
    'Instruction copied to clipboard!': _('Instruction copied to clipboard!'),
    'No recent symbols yet.': _('No recent symbols yet.'),
    'Clear recent': _('Clear recent'),
    // === INDEX.HTML - MAIN HEADER & FOOTERMATRIX BUILDER & ALERTS ===
    'Error': _('Error'),
    'Matrix': _('Matrix'),
    'Rows:': _('Rows:'),
    'Columns:': _('Columns:'),
    'Fill:': _('Fill:'),
    'Subscripts (a, b...)': _('Subscripts (a, b...)'),
    'Zeros (0)': _('Zeros (0)'),
    'Ones (1)': _('Ones (1)'),
    'Vars (a, b, c...)': _('Vars (a, b, c...)'),
    'Numbers (1, 2, 3...)': _('Numbers (1, 2, 3...)'),
    'Empty ({})': _('Empty ({})'),
    // === BASE.JSON - BASIC ===
    'Basic': _('Basic'),
    'Fraction': _('Fraction'),
    'Small fraction': _('Small fraction'),
    'Large fraction': _('Large fraction'),
    'Nested fraction': _('Nested fraction'),
    'Infinity': _('Infinity'),
    'Lowercase Greek letter alpha': _('Lowercase Greek letter alpha'),
    'Lowercase Greek letter beta': _('Lowercase Greek letter beta'),
    'Lowercase Greek letter pi': _('Lowercase Greek letter pi'),
    '\\text{Display}': _('\\text{Display}'),
    'Display mode': _('Display mode'),
    'Parentheses': _('Parentheses'),
    'Root': _('Root'),
    'Subscript': _('Subscript'),
    'Superscript': _('Superscript'),
    'Text': _('Text'),
    '\\text{text}': _('\\text{text}'),
    // === BASE.JSON - DELIMITERS ===
    'Delimiters': _('Delimiters'),
    'Square brackets': _('Square brackets'),
    'Curly braces': _('Curly braces'),
    'Norm': _('Norm'),
    'Floor function': _('Floor function'),
    'Ceiling function': _('Ceiling function'),
    'Absolute value': _('Absolute value'),
    'Angle': _('Angle'),
    // === BASE.JSON - GROUPING ===
    'Grouping': _('Grouping'),
    'Box': _('Box'),
    'Underbrace': _('Underbrace'),
    'Overbrace': _('Overbrace'),
    // === BASE.JSON - OPERATORS AND RELATIONS ===
    'Operators and relations': _('Operators and relations'),
    'Approximately equal': _('Approximately equal'),
    'Approximate': _('Approximate'),
    'Asymptotically equal': _('Asymptotically equal'),
    'Asterisk': _('Asterisk'),
    'Bowtie': _('Bowtie'),
    'Circled quotient': _('Circled quotient'),
    'Composition': _('Composition'),
    'Congruent': _('Congruent'),
    'Reduced Planck constant': _('Reduced Planck constant'),
    'Square': _('Square'),
    'Large circle': _('Large circle'),
    'Difference': _('Difference'),
    'Not equal': _('Not equal'),
    'Division': _('Division'),
    'Equivalent': _('Equivalent'),
    'Dotless i': _('Dotless i'),
    'Intersection': _('Intersection'),
    'Dotless j': _('Dotless j'),
    'Greater than or equal to': _('Greater than or equal to'),
    'Greater than': _('Greater than'),
    'Less than or equal to': _('Less than or equal to'),
    'Less than': _('Less than'),
    'Multiplication': _('Multiplication'),
    'Plus-minus': _('Plus-minus'),
    'Nabla': _('Nabla'),
    'Not congruent': _('Not congruent'),
    'Not equivalent': _('Not equivalent'),
    'Not greater than or equal to (slant)': _('Not greater than or equal to (slant)'),
    'Not greater than or equal to': _('Not greater than or equal to'),
    'Not greater than': _('Not greater than'),
    'Not less than or equal to (slant)': _('Not less than or equal to (slant)'),
    'Not less than or equal to': _('Not less than or equal to'),
    'Not less than': _('Not less than'),
    'Not an element of': _('Not an element of'),
    'Does not precede': _('Does not precede'),
    'Not similar': _('Not similar'),
    'Not a subset or equal': _('Not a subset or equal'),
    'Does not succeed': _('Does not succeed'),
    'Parallel': _('Parallel'),
    'Imaginary part': _('Imaginary part'),
    'Real part': _('Real part'),
    'Perpendicular': _('Perpendicular'),
    'Element of': _('Element of'),
    'Star product': _('Star product'),
    'Dot product': _('Dot product'),
    'Tensor product': _('Tensor product'),
    'Proportional to': _('Proportional to'),
    'Bullet': _('Bullet'),
    'Diagonal dots': _('Diagonal dots'),
    'Horizontal dots': _('Horizontal dots'),
    'Vertical dots': _('Vertical dots'),
    'Circled minus': _('Circled minus'),
    'Satisfies (models)': _('Satisfies (models)'),
    'Is deduced (vdash)': _('Is deduced (vdash)'),
    'Similar': _('Similar'),
    'Subset': _('Subset'),
    'Subset or equal': _('Subset or equal'),
    'Proper subset': _('Proper subset'),
    'Direct sum': _('Direct sum'),
    'Superset': _('Superset'),
    'Superset or equal': _('Superset or equal'),
    'Small right triangle': _('Small right triangle'),
    'Large triangle': _('Large triangle'),
    'Large inverted triangle': _('Large inverted triangle'),
    'Small left triangle': _('Small left triangle'),
    'Union': _('Union'),
    'Measured angle': _('Measured angle'),
    // === BASE.JSON - SETS ===
    'Sets': _('Sets'),
    'Complex numbers': _('Complex numbers'),
    'Empty set': _('Empty set'),
    'Integers': _('Integers'),
    'Natural numbers': _('Natural numbers'),
    'Rational numbers': _('Rational numbers'),
    'Real numbers': _('Real numbers'),
    // === BASE.JSON - LOGIC ===
    'Logic': _('Logic'),
    'Conjunction': _('Conjunction'),
    'Disjunction': _('Disjunction'),
    'Equivalence': _('Equivalence'),
    'Exists': _('Exists'),
    'Implication': _('Implication'),
    'Negation': _('Negation'),
    'Does not exist': _('Does not exist'),
    'Not for all': _('Not for all'),
    'For all': _('For all'),
    // === BASE.JSON - FUNCTIONS ===
    'Functions': _('Functions'),
    'Cosecant': _('Cosecant'),
    'Cosine': _('Cosine'),
    'Cotangent': _('Cotangent'),
    'Exponential': _('Exponential'),
    'Logarithm': _('Logarithm'),
    'Natural logarithm': _('Natural logarithm'),
    'Square root': _('Square root'),
    'Nth root': _('Nth root'),
    'Secant': _('Secant'),
    'Sine': _('Sine'),
    'Tangent': _('Tangent'),
    // === BASE.JSON - CALCULUS ===
    'Calculus': _('Calculus'),
    'Large coproduct': _('Large coproduct'),
    'Derivative': _('Derivative'),
    'Partial derivative': _('Partial derivative'),
    'Definite integral': _('Definite integral'),
    'Double integral': _('Double integral'),
    'Indefinite integral': _('Indefinite integral'),
    'Triple integral': _('Triple integral'),
    'Limit': _('Limit'),
    'Large logical product': _('Large logical product'),
    'Large tensor product': _('Large tensor product'),
    'Product': _('Product'),
    'Large direct sum': _('Large direct sum'),
    'Large logical sum': _('Large logical sum'),
    'Summation': _('Summation'),
    'Large disjoint union': _('Large disjoint union'),
    // === BASE.JSON - ARROWS ===
    'Arrows': _('Arrows'),
    'Right-left harpoons': _('Right-left harpoons'),
    'Left-right harpoons': _('Left-right harpoons'),
    'Right harpoon down': _('Right harpoon down'),
    'Right harpoon up': _('Right harpoon up'),
    'Left harpoon down': _('Left harpoon down'),
    'Left harpoon up': _('Left harpoon up'),
    'Double arrow': _('Double arrow'),
    'Long equivalence': _('Long equivalence'),
    'Down arrow': _('Down arrow'),
    'Up arrow': _('Up arrow'),
    'Right loop arrow': _('Right loop arrow'),
    'Right circular arrow': _('Right circular arrow'),
    'Arrow with text below': _('Arrow with text below'),
    '\\underset{\\text{text}}{\\xrightarrow{}}': _('\\underset{\\text{text}}{\\xrightarrow{}}'),
    'Arrow with text above': _('Arrow with text above'),
    '\\xrightarrow{\\text{text}}': _('\\xrightarrow{\\text{text}}'),
    'Arrow with text above and below': _('Arrow with text above and below'),
    '\\xrightarrow[\\text{below}]{\\text{above}}': _('\\xrightarrow[\\text{below}]{\\text{above}}'),
    'Right curve arrow': _('Right curve arrow'),
    'Left curve arrow': _('Left curve arrow'),
    'Right arrow': _('Right arrow'),
    'Right arrow with tail': _('Right arrow with tail'),
    'Double down arrow': _('Double down arrow'),
    'Double up arrow': _('Double up arrow'),
    'Double vertical arrow': _('Double vertical arrow'),
    'Left arrow': _('Left arrow'),
    'Left arrow (gets)': _('Left arrow (gets)'),
    'Long arrow': _('Long arrow'),
    'Long double arrow': _('Long double arrow'),
    'Long left arrow': _('Long left arrow'),
    'Northeast arrow': _('Northeast arrow'),
    'Northwest arrow': _('Northwest arrow'),
    'Wiggly right arrow': _('Wiggly right arrow'),
    'Southeast arrow': _('Southeast arrow'),
    'Southwest arrow': _('Southwest arrow'),
    'Vector arrow': _('Vector arrow'),
    'Double up arrows': _('Double up arrows'),
    'Double right arrows': _('Double right arrows'),
    'Implies': _('Implies'),
    'Reverse implies': _('Reverse implies'),
    'Long implies': _('Long implies'),
    'Injection': _('Injection'),
    'Long mapping': _('Long mapping'),
    'Mapsto': _('Mapsto'),
    'Not implies right': _('Not implies right'),
    'Not implies left': _('Not implies left'),
    'Vector': _('Vector'),
    // === BASE.JSON - MATRICES ===
    'Matrices': _('Matrices'),
    '2x2 determinant': _('2x2 determinant'),
    '2x2 matrix': _('2x2 matrix'),
    '2x2 matrix with brackets': _('2x2 matrix with brackets'),
    '3x3 matrix': _('3x3 matrix'),
    // === BASE.JSON - SYSTEMS ===
    'Systems': _('Systems'),
    'System of 3 equations with array': _('System of 3 equations with array'),
    'System with array': _('System with array'),
    // === BASE.JSON - DECORATIONS ===
    'Decorations': _('Decorations'),
    'Bar': _('Bar'),
    'Double dot': _('Double dot'),
    'Dot': _('Dot'),
    'Overline': _('Overline'),
    'Hat': _('Hat'),
    'Wide hat': _('Wide hat'),
    'Tilde': _('Tilde'),
    // === BASE.JSON - ANNOTATIONS ===
    'Annotations': _('Annotations'),
    'Insert text': _('Insert text'),
    'Cross out with X': _('Cross out with X'),
    'Cross out': _('Cross out'),
    'Cancel term': _('Cancel term'),
    'Cancel and annotate': _('Cancel and annotate'),
    'Text below': _('Text below'),
    'Text above': _('Text above'),
    // === BASE.JSON - TEXT FORMATTING ===
    'Text formatting': _('Text formatting'),
    'Tiny text': _('Tiny text'),
    '\\tiny{Text}': _('\\tiny{Text}'),
    'Script size text': _('Script size text'),
    '\\scriptsize{Text}': _('\\scriptsize{Text}'),
    'Small text': _('Small text'),
    '\\small{Text}': _('\\small{Text}'),
    'Normal size text': _('Normal size text'),
    '\\normalsize{Text}': _('\\normalsize{Text}'),
    'Large text': _('Large text'),
    '\\large{Text}': _('\\large{Text}'),
    'Larger text': _('Larger text'),
    '\\Large{Text}': _('\\Large{Text}'),
    'Very large text': _('Very large text'),
    '\\LARGE{Text}': _('\\LARGE{Text}'),
    'Huge text': _('Huge text'),
    '\\huge{Text}': _('\\huge{Text}'),
    'Huger text': _('Huger text'),
    '\\Huge{Text}': _('\\Huge{Text}'),
    'Blackboard bold': _('Blackboard bold'),
    'Math bold': _('Math bold'),
    '\\mathbf{\\text{bold m}}': _('\\mathbf{\\text{bold m}}'),
    'Calligraphic': _('Calligraphic'),
    'Gothic': _('Gothic'),
    'Math italic': _('Math italic'),
    '\\mathit{italic}': _('\\mathit{italic}'),
    'Upright (math roman)': _('Upright (math roman)'),
    '\\mathrm{upright}': _('\\mathrm{upright}'),
    'Typographic bold': _('Typographic bold'),
    '\\textbf{bold t}': _('\\textbf{bold t}'),
    'Italic': _('Italic'),
    '\\textit{italic}': _('\\textit{italic}'),
    'Monospace': _('Monospace'),
    '\\texttt{monospace}': _('\\texttt{monospace}'),
    'Plain text': _('Plain text'),
    'Color': _('Color'),
    // === BASE.JSON - GREEK ===
    'Greek': _('Greek'),
    'Lowercase alpha': _('Lowercase alpha'),
    'Lowercase beta': _('Lowercase beta'),
    'Lowercase chi': _('Lowercase chi'),
    'Uppercase Delta': _('Uppercase Delta'),
    'Lowercase delta': _('Lowercase delta'),
    'Lowercase eta': _('Lowercase eta'),
    'Uppercase Gamma': _('Uppercase Gamma'),
    'Lowercase gamma': _('Lowercase gamma'),
    'Lowercase iota': _('Lowercase iota'),
    'Lowercase kappa': _('Lowercase kappa'),
    'Uppercase Lambda': _('Uppercase Lambda'),
    'Lowercase lambda': _('Lowercase lambda'),
    'Lowercase mu': _('Lowercase mu'),
    'Lowercase nu': _('Lowercase nu'),
    'Uppercase Omega': _('Uppercase Omega'),
    'Lowercase omega': _('Lowercase omega'),
    'Uppercase Phi': _('Uppercase Phi'),
    'Lowercase phi': _('Lowercase phi'),
    'Phi variant': _('Phi variant'),
    'Uppercase Pi': _('Uppercase Pi'),
    'Pi variant': _('Pi variant'),
    'Uppercase Psi': _('Uppercase Psi'),
    'Lowercase psi': _('Lowercase psi'),
    'Lowercase rho': _('Lowercase rho'),
    'Rho variant': _('Rho variant'),
    'Final sigma': _('Final sigma'),
    'Uppercase Sigma': _('Uppercase Sigma'),
    'Lowercase sigma': _('Lowercase sigma'),
    'Lowercase tau': _('Lowercase tau'),
    'Uppercase Theta': _('Uppercase Theta'),
    'Lowercase theta': _('Lowercase theta'),
    'Theta variant': _('Theta variant'),
    'Uppercase Upsilon': _('Uppercase Upsilon'),
    'Lowercase upsilon': _('Lowercase upsilon'),
    'Uppercase Xi': _('Uppercase Xi'),
    'Lowercase xi': _('Lowercase xi'),
    'Lowercase zeta': _('Lowercase zeta'),
    'Lowercase epsilon': _('Lowercase epsilon'),
    'Epsilon variant': _('Epsilon variant'),
    // === BASE.JSON - GREC ===
    '\\underbrace{a+b+c}_{	ext{group}}': _('\\underbrace{a+b+c}_{	ext{group}}'),
    '\\overbrace{a+b+c}^{	ext{group}}': _('\\overbrace{a+b+c}^{	ext{group}}'),
    // === BIOLOGY.JSON - PH AND ACID-BASE BALANCE ===
    'pH and acid-base balance': _('pH and acid-base balance'),
    'pH': _('pH'),
    'Henderson–Hasselbalch': _('Henderson–Hasselbalch'),
    // === BIOLOGY.JSON - ENZYME KINETICS ===
    'Enzyme kinetics': _('Enzyme kinetics'),
    'Michaelis–Menten': _('Michaelis–Menten'),
    'Lineweaver–Burk': _('Lineweaver–Burk'),
    // === BIOLOGY.JSON - POPULATION GENETICS ===
    'Population genetics': _('Population genetics'),
    'Allele frequency': _('Allele frequency'),
    'Hardy–Weinberg': _('Hardy–Weinberg'),
    // === BIOLOGY.JSON - POPULATION DYNAMICS ===
    'Population dynamics': _('Population dynamics'),
    'Exponential growth': _('Exponential growth'),
    'Logistic growth': _('Logistic growth'),
    // === BIOLOGY.JSON - TRANSPORT AND DIFFUSION ===
    'Transport and diffusion': _('Transport and diffusion'),
    'Fick\'s Law': _('Fick\'s Law'),
    'Nernst equation': _('Nernst equation'),
    'Osmotic pressure': _('Osmotic pressure'),
    // === STATISTICS.JSON - CENTRAL TENDENCY MEASURES ===
    'Central tendency measures': _('Central tendency measures'),
    'Arithmetic mean': _('Arithmetic mean'),
    'Weighted mean': _('Weighted mean'),
    'Geometric mean': _('Geometric mean'),
    'Harmonic mean': _('Harmonic mean'),
    'Quadratic mean': _('Quadratic mean'),
    '\\overline{x}_{\\text{quad}} = \\sqrt{\\frac{\\sum x_i^2}{n}}': _('\\overline{x}_{\\text{quad}} = \\sqrt{\\frac{\\sum x_i^2}{n}}'),
    'Median': _('Median'),
    'k-th percentile': _('k-th percentile'),
    // === STATISTICS.JSON - DISPERSION MEASURES ===
    'Dispersion measures': _('Dispersion measures'),
    'Range': _('Range'),
    'Interquartile range': _('Interquartile range'),
    'Coefficient of variation': _('Coefficient of variation'),
    'Population variance': _('Population variance'),
    'Sample variance': _('Sample variance'),
    'Population standard deviation': _('Population standard deviation'),
    'Sample standard deviation': _('Sample standard deviation'),
    'Mean absolute deviation': _('Mean absolute deviation'),
    'Semi-interquartile range': _('Semi-interquartile range'),
    'Standard score (population z-score)': _('Standard score (population z-score)'),
    'Standard score (sample z-score)': _('Standard score (sample z-score)'),
    'Population kurtosis': _('Population kurtosis'),
    '\\text{Kurtosis}_{\\text{pop}} = \\frac{\\sum (x_i - \\overline{x})^4}{n\\sigma^4}': _('\\text{Kurtosis}_{\\text{pop}} = \\frac{\\sum (x_i - \\overline{x})^4}{n\\sigma^4}'),
    'Sample kurtosis': _('Sample kurtosis'),
    '\\text{Kurtosis}_{\\text{samp}} = \\frac{\\sum (x_i - \\overline{x})^4}{(n - 1)s^4}': _('\\text{Kurtosis}_{\\text{samp}} = \\frac{\\sum (x_i - \\overline{x})^4}{(n - 1)s^4}'),
    // === STATISTICS.JSON - FREQUENCIES ===
    'Frequencies': _('Frequencies'),
    'Relative frequency': _('Relative frequency'),
    'Cumulative frequency': _('Cumulative frequency'),
    'Cumulative absolute frequency': _('Cumulative absolute frequency'),
    // === STATISTICS.JSON - INTERVALS ===
    'Intervals': _('Intervals'),
    'Class mark': _('Class mark'),
    'Class width': _('Class width'),
    'Median in intervals': _('Median in intervals'),
    'Mode in intervals': _('Mode in intervals'),
    // === STATISTICS.JSON - MOMENTS AND GENERATING FUNCTIONS ===
    'Moments and generating functions': _('Moments and generating functions'),
    'Discrete expectation': _('Discrete expectation'),
    'Continuous expectation': _('Continuous expectation'),
    'Variance (moments)': _('Variance (moments)'),
    'Moment-generating function': _('Moment-generating function'),
    // === STATISTICS.JSON - PROBABILITY DISTRIBUTIONS ===
    'Probability distributions': _('Probability distributions'),
    'Binomial': _('Binomial'),
    'Poisson': _('Poisson'),
    'Standard normal distribution': _('Standard normal distribution'),
    'Student\'s t-distribution': _('Student\'s t-distribution'),
    'Chi-squared distribution': _('Chi-squared distribution'),
    'Fisher\'s F-distribution': _('Fisher\'s F-distribution'),
    // === STATISTICS.JSON - CORRELATION COEFFICIENTS ===
    'Correlation coefficients': _('Correlation coefficients'),
    'Population covariance': _('Population covariance'),
    'Sample covariance': _('Sample covariance'),
    'Pearson': _('Pearson'),
    'Pearson\'s t-test': _('Pearson\'s t-test'),
    'Spearman': _('Spearman'),
    'Kendall\'s Tau': _('Kendall\'s Tau'),
    'Phi coefficient': _('Phi coefficient'),
    // === STATISTICS.JSON - REGRESSION ===
    'Regression': _('Regression'),
    'Regression line': _('Regression line'),
    'Slope': _('Slope'),
    'Intercept': _('Intercept'),
    'Correlation coefficient': _('Correlation coefficient'),
    'Coefficient of determination': _('Coefficient of determination'),
    'Adjusted R^2': _('Adjusted R^2'),
    'Standard error of the estimate': _('Standard error of the estimate'),
    'Prediction interval': _('Prediction interval'),
    // === STATISTICS.JSON - STATISTICAL INFERENCE ===
    'Statistical inference': _('Statistical inference'),
    'z-statistic': _('z-statistic'),
    't-statistic': _('t-statistic'),
    'Standard error with z': _('Standard error with z'),
    'Standard error with t': _('Standard error with t'),
    'Interval with population standard deviation': _('Interval with population standard deviation'),
    'Interval with sample deviation': _('Interval with sample deviation'),
    'Sample size (mean)': _('Sample size (mean)'),
    'Sample size (proportion)': _('Sample size (proportion)'),
    // === STATISTICS.JSON - PROPORTION ESTIMATION ===
    'Proportion estimation': _('Proportion estimation'),
    'Standard error of proportion': _('Standard error of proportion'),
    'CI for proportion': _('CI for proportion'),
    // === STATISTICS.JSON - HYPOTHESIS TESTING ===
    'Hypothesis testing': _('Hypothesis testing'),
    'z for proportions': _('z for proportions'),
    'z for difference of proportions': _('z for difference of proportions'),
    'One-sample t-test': _('One-sample t-test'),
    'Independent two-sample t-test': _('Independent two-sample t-test'),
    'Pooled variance': _('Pooled variance'),
    'Paired t-test': _('Paired t-test'),
    'Chi-squared': _('Chi-squared'),
    // === STATISTICS.JSON - ANOVA ===
    'ANOVA': _('ANOVA'),
    'SS between groups': _('SS between groups'),
    'SS within groups': _('SS within groups'),
    'F-statistic (ANOVA)': _('F-statistic (ANOVA)'),
    // === STATISTICS.JSON - ASSOCIATION AND CONTINGENCY ===
    'Association and contingency': _('Association and contingency'),
    'Contingency coef': _('Contingency coef'),
    'Cramer\'s V': _('Cramer\'s V'),
    // === STATISTICS.JSON - INEQUALITIES ===
    'Inequalities': _('Inequalities'),
    'Chebyshev': _('Chebyshev'),
    // === PHYSICS.JSON - KINEMATICS ===
    'Kinematics': _('Kinematics'),
    'Average velocity': _('Average velocity'),
    'Average acceleration': _('Average acceleration'),
    'Uniform motion': _('Uniform motion'),
    'Position with constant acceleration': _('Position with constant acceleration'),
    'Velocity with constant acceleration': _('Velocity with constant acceleration'),
    'Velocity without time': _('Velocity without time'),
    // === PHYSICS.JSON - DYNAMICS ===
    'Dynamics': _('Dynamics'),
    'Newton\'s second law': _('Newton\'s second law'),
    'Linear momentum': _('Linear momentum'),
    'Force and impulse': _('Force and impulse'),
    'Work': _('Work'),
    'Power': _('Power'),
    // === PHYSICS.JSON - ENERGY AND WORK ===
    'Energy and Work': _('Energy and Work'),
    'Kinetic energy': _('Kinetic energy'),
    'Gravitational potential energy': _('Gravitational potential energy'),
    'Mechanical energy': _('Mechanical energy'),
    'Work-energy theorem': _('Work-energy theorem'),
    'Electric power': _('Electric power'),
    // === PHYSICS.JSON - GRAVITATION ===
    'Gravitation': _('Gravitation'),
    'Law of universal gravitation': _('Law of universal gravitation'),
    'Gravitational field': _('Gravitational field'),
    'Orbital velocity': _('Orbital velocity'),
    // === PHYSICS.JSON - WAVES AND OSCILLATIONS ===
    'Waves and Oscillations': _('Waves and Oscillations'),
    'Wave speed': _('Wave speed'),
    'Period': _('Period'),
    'Frequency': _('Frequency'),
    'Hooke\'s law': _('Hooke\'s law'),
    'SHM Period': _('SHM Period'),
    'Simple harmonic motion': _('Simple harmonic motion'),
    // === PHYSICS.JSON - ELECTRICITY AND MAGNETISM ===
    'Electricity and Magnetism': _('Electricity and Magnetism'),
    'Ohm\'s law': _('Ohm\'s law'),
    'Resistors in series': _('Resistors in series'),
    'Resistors in parallel': _('Resistors in parallel'),
    'Capacitance': _('Capacitance'),
    'Energy in capacitor': _('Energy in capacitor'),
    'Lorentz force': _('Lorentz force'),
    'Magnetic flux': _('Magnetic flux'),
    'Faraday\'s law': _('Faraday\'s law'),
    // === PHYSICS.JSON - OPTICS ===
    'Optics': _('Optics'),
    'Snell\'s law': _('Snell\'s law'),
    'Thin lens equation': _('Thin lens equation'),
    'Lateral magnification': _('Lateral magnification'),
    'Law of reflection': _('Law of reflection'),
    // === PHYSICS.JSON - FLUIDS ===
    'Fluids': _('Fluids'),
    'Pressure': _('Pressure'),
    'Hydrostatic pressure': _('Hydrostatic pressure'),
    'Continuity equation': _('Continuity equation'),
    'Bernoulli\'s equation': _('Bernoulli\'s equation'),
    'P + \\tfrac12 \\rho v^2 + \\rho g h = \\text{constant}': _('P + \\tfrac12 \\rho v^2 + \\rho g h = \\text{constant}'),
    // === PHYSICS.JSON - THERMODYNAMICS ===
    'Thermodynamics': _('Thermodynamics'),
    'Ideal gas law': _('Ideal gas law'),
    'Sensible heat': _('Sensible heat'),
    'Latent heat': _('Latent heat'),
    'First law of thermodynamics': _('First law of thermodynamics'),
    'Entropy': _('Entropy'),
    // === GEOMETRY.JSON - PERIMETERS AND LENGTHS ===
    'Perimeters and lengths': _('Perimeters and lengths'),
    'Perimeter of a square': _('Perimeter of a square'),
    'Perimeter of a rectangle': _('Perimeter of a rectangle'),
    'Perimeter of a triangle': _('Perimeter of a triangle'),
    'Perimeter of a regular polygon': _('Perimeter of a regular polygon'),
    'Circumference perimeter': _('Circumference perimeter'),
    'Arc length (radians)': _('Arc length (radians)'),
    'Arc length (degrees)': _('Arc length (degrees)'),
    'Right triangle perimeter': _('Right triangle perimeter'),
    // === GEOMETRY.JSON - AREAS OF PLANE FIGURES ===
    'Areas of plane figures': _('Areas of plane figures'),
    'Area of a rectangle': _('Area of a rectangle'),
    'Area of a triangle': _('Area of a triangle'),
    'Area of a square': _('Area of a square'),
    'Area of a circle': _('Area of a circle'),
    'Area of a trapezoid': _('Area of a trapezoid'),
    'Area of a parallelogram': _('Area of a parallelogram'),
    'Area of a rhombus': _('Area of a rhombus'),
    'Area of an ellipse': _('Area of an ellipse'),
    'Area of a triangle (with trigonometry)': _('Area of a triangle (with trigonometry)'),
    'Area of a circular sector': _('Area of a circular sector'),
    // === GEOMETRY.JSON - VOLUMES OF SOLIDS ===
    'Volumes of solids': _('Volumes of solids'),
    'Volume of a cube': _('Volume of a cube'),
    'Volume of a prism': _('Volume of a prism'),
    'Volume of a cylinder': _('Volume of a cylinder'),
    'Volume of a cone': _('Volume of a cone'),
    'Volume of a sphere': _('Volume of a sphere'),
    'Volume of a pyramid': _('Volume of a pyramid'),
    // === GEOMETRY.JSON - SURFACE AREAS OF SOLIDS ===
    'Surface areas of solids': _('Surface areas of solids'),
    'Lateral area of a cylinder': _('Lateral area of a cylinder'),
    'Total area of a cylinder': _('Total area of a cylinder'),
    'Lateral area of a cone': _('Lateral area of a cone'),
    'Total area of a cone': _('Total area of a cone'),
    'Surface area of a sphere': _('Surface area of a sphere'),
    'Total area of a cube': _('Total area of a cube'),
    // === GEOMETRY.JSON - TRIGONOMETRY AND COORDINATES ===
    'Trigonometry and Coordinates': _('Trigonometry and Coordinates'),
    'Pythagorean theorem': _('Pythagorean theorem'),
    'Law of sines': _('Law of sines'),
    'Law of cosines': _('Law of cosines'),
    'Equation of a line': _('Equation of a line'),
    'Distance between two points': _('Distance between two points'),
    'Midpoint': _('Midpoint'),
    'Equation of a circle': _('Equation of a circle'),
    // === CHEMISTRY.JSON - CHEMICAL SYMBOLIC NOTATION ===
    'Chemical symbolic notation': _('Chemical symbolic notation'),
    'Element with atomic and mass number': _('Element with atomic and mass number'),
    'Chemical formula (mhchem package)': _('Chemical formula (mhchem package)'),
    'Reaction arrow': _('Reaction arrow'),
    'Reverse reaction arrow': _('Reverse reaction arrow'),
    'Reversible reaction': _('Reversible reaction'),
    'Example of chemical reaction': _('Example of chemical reaction'),
    'Positive ion': _('Positive ion'),
    'Negative ion': _('Negative ion'),
    'Solid state': _('Solid state'),
    'Liquid state': _('Liquid state'),
    'Gaseous state': _('Gaseous state'),
    'Aqueous state': _('Aqueous state'),
    'Balanced reaction': _('Balanced reaction'),
    // === CHEMISTRY.JSON - IDEAL GASES ===
    'Ideal gases': _('Ideal gases'),
    'Ideal gas law equation': _('Ideal gas law equation'),
    'Density of an ideal gas': _('Density of an ideal gas'),
    'Partial pressure': _('Partial pressure'),
    // === CHEMISTRY.JSON - STOICHIOMETRY ===
    'Stoichiometry': _('Stoichiometry'),
    'Amount of substance': _('Amount of substance'),
    'Mass of substance': _('Mass of substance'),
    'Molar concentration': _('Molar concentration'),
    'Dilution': _('Dilution'),
    // === CHEMISTRY.JSON - CHEMICAL EQUILIBRIUM ===
    'Chemical equilibrium': _('Chemical equilibrium'),
    'Equilibrium constant (Kc)': _('Equilibrium constant (Kc)'),
    'Equilibrium constant (Kp)': _('Equilibrium constant (Kp)'),
    'Reaction quotient': _('Reaction quotient'),
    // === CHEMISTRY.JSON - ACID-BASE ===
    'Acid-base': _('Acid-base'),
    'pOH': _('pOH'),
    'pH-pOH relationship': _('pH-pOH relationship'),
    'Acidity constant': _('Acidity constant'),
    'pKa': _('pKa'),
    // === CHEMISTRY.JSON - THERMOCHEMISTRY ===
    'Thermochemistry': _('Thermochemistry'),
    'Heat of reaction': _('Heat of reaction'),
    'Gibbs free energy': _('Gibbs free energy'),
    // === CHEMISTRY.JSON - CONSTANTS ===
    'Constants': _('Constants'),
    'Avogadro\'s number': _('Avogadro\'s number'),
    'Gas constant': _('Gas constant'),
    'Boltzmann constant': _('Boltzmann constant'),
    // === MENUS.JSON - MENU DESCRIPTIONS ===
    'Description': _('Description'),
    'File': _('File'),
    'Basic symbols': _('Basic symbols'),
    'Biology': _('Biology'),
    'Statistics': _('Statistics'),
    'Physics': _('Physics'),
    'Chemistry': _('Chemistry'),
    'Geometry': _('Geometry'),
    // === EDITOR-MENU.HTML ===
    'LaTeX Formula Visual Editor': _('LaTeX Formula Visual Editor'),
    'LaTeX Formula Editor': _('LaTeX Formula Editor'),
    'Create with AI': _('✨ Create with AI'),
    'Paste': _('Paste'),
    'Copy JSON': _('Copy JSON'),
    'Export JSON': _('Export JSON'),
    'Go to category...': _('Go to category...'),
    'Collapse/Expand': _('Collapse/Expand'),
    'Application by Juan José de Haro': _('Application by Juan José de Haro'),
    'Creative Commons BY-SA License': _('Creative Commons BY-SA License'),
    'Cancel': _('Cancel'),
    'Save': _('Save'),
    'Paste JSON content': _('Paste JSON content'),
    'Paste the JSON code here...': _('Paste the JSON code here...'),
    'Type of content to paste:': _('Type of content to paste:'),
    'Full JSON (in new tab)': _('Full JSON (in new tab)'),
    'Category (in current tab)': _('Category (in current tab)'),
    'Element(s) (in current tab)': _('Element(s) (in current tab)'),
    'Add element(s) to category:': _('Add element(s) to category:'),
    'Add Content': _('Add Content'),
    'AI Creation Wizard': _('AI Creation Wizard'),
    '1. What do you want to create?': _('1. What do you want to create?'),
    'Full JSON file': _('Full JSON file'),
    'A single category': _('A single category'),
    'Multiple elements': _('Multiple elements'),
    '2. Generate and use the prompt': _('2. Generate and use the prompt'),
    'Follow the steps to generate a prompt and get the JSON code from your preferred AI.': _('Follow the steps to generate a prompt and get the JSON code from your preferred AI.'),
    'The generated prompt will appear here...': _('The generated prompt will appear here...'),
    '1. Generate Prompt': _('1. Generate Prompt'),
    '2. Launch in ChatGPT': _('2. Launch in ChatGPT'),
    '2a. Copy (other AI)': _('2a. Copy (other AI)'),
    '3. Paste the result into the editor': _('3. Paste the result into the editor'),
    'Once you have the code, close this window and use the': _('Once you have the code, close this window and use the'),
    'button on the top bar to add your new creation.': _('button on the top bar to add your new creation.'),
    'Add formula set': _('Add formula set'),
    'Clear cache': _('Clear cache'),
    'Loading list...': _('Loading list...'),
    'Other sources': _('Other sources'),
    'Paste a JSON URL...': _('Paste a JSON URL...'),
    'Open local file...': _('Open local file...'),
    'Add or load a formula set.': _('Add or load a formula set.'),
    'Edit category': _('Edit category'),
    'Delete category': _('Delete category'),
    'Add element': _('Add element'),
    'Element': _('Element'),
    'Edit element': _('Edit element'),
    'Delete element': _('Delete element'),
    'The preview will appear here.': _('The preview will appear here.'),
    'Could not load the file for "{name}".': _('Could not load the file for "{name}".'),
    'All browser data has been cleared.': _('All browser data has been cleared.'),
    'Please enter a valid URL.': _('Please enter a valid URL.'),
    'Custom URL': _('Custom URL'),
    'The JSON file does not have the expected format.': _('The JSON file does not have the expected format.'),
    'Error processing the JSON file.': _('Error processing the JSON file.'),
    'There is nothing to copy.': _('There is nothing to copy.'),
    'Copied!': _('Copied!'),
    'There is nothing to export.': _('There is nothing to export.'),
    'The text area is empty.': _('The text area is empty.'),
    'Pasted': _('Pasted'),
    'Invalid full JSON.': _('Invalid full JSON.'),
    'Invalid category JSON.': _('Invalid category JSON.'),
    'Select a category.': _('Select a category.'),
    'The format of the element or list of elements is invalid. Make sure they are valid JSON objects separated by commas.': _('The format of the element or list of elements is invalid. Make sure they are valid JSON objects separated by commas.'),
    'No valid elements found in the pasted text.': _('No valid elements found in the pasted text.'),
    'Error processing JSON:': _('Error processing JSON: '),
    'Please enter a topic.': _('Please enter a topic.'),
    'None.': _('None.'),
    'Could not copy the prompt.': _('Could not copy the prompt.'),
    'Edit Category': _('Edit Category'),
    'Are you sure?': _('Are you sure?'),
    'Add Element': _('Add Element'),
    'Edit Element': _('Edit Element'),
    'The name is required.': _('The name is required.'),
    'Name': _('Name'),
    'Title': _('Title'),
    'CSS Grid Template': _('CSS Grid Template'),
    'LaTeX (insert)': _('LaTeX (insert)'),
    'LaTeX (display)': _('LaTeX (display)'),
    'Optional. If left blank, the insert LaTeX will be used.': _('Optional. If left blank, the insert LaTeX will be used.'),
    'Move to another category': _('Move to another category'),
    'Move': _('Move'),
    'Title and LaTeX are required.': _('Title and LaTeX are required.'),
    'It is already in this category.': _('It is already in this category.'),
    'Could not retrieve menus.': _('Could not retrieve menus.'),
    'Error loading the list.': _('Error loading the list.'),
    'Could not load the default base formulas.': _('Could not load the default base formulas.'),
    'General topic:': _('General topic:'),
    'E.g.: Statistics, Linear Algebra...': _('E.g.: Statistics, Linear Algebra...'),
    'Additional instructions for the AI (optional):': _('Additional instructions for the AI (optional):'),
    'E.g.: Create 3 categories with 5 formulas each. Or create 8 elements about...': _('E.g.: Create 3 categories with 5 formulas each. Or create 8 elements about...'),
    'Category topic:': _('Category topic:'),
    'E.g.: Vectors, Organic Chemistry...': _('E.g.: Vectors, Organic Chemistry...'),
    'Topic of the elements:': _('Topic of the elements:'),
    'E.g.: Trigonometric identities': _('E.g.: Trigonometric identities'),
    'No .json files found in the \'docs\' folder.': _('No .json files found in the \'docs\' folder.')
};